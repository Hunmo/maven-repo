<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.opennms</groupId>
  <artifactId>opennms</artifactId>
  <version>1.3.3</version>
  <packaging>pom</packaging>
  <name>OpenNMS</name>
  <url>http://opennms.org</url>
  <description>
    OpenNMS is the world's first enterprise grade network management
    platform developed under the open source model. It consists of a
    community supported open-source project as well as a commercial
    services, training and support organization. 
  </description>
  <issueManagement>
    <system>Bugzilla</system>
    <url>http://bugs.opennms.org/</url>
  </issueManagement>  
  <ciManagement>
    <system>CruiseControl</system>
    <url>http://ci.opennms.org/</url>
    <notifiers>
      <notifier>
        <type>htmlmail</type>
        <address>opennms-devel@lists.sourceforge.net</address>
      </notifier>
    </notifiers>
  </ciManagement>
  <developers>
    <developer>
      <id>brozow</id>
      <name>Matt Brozowski</name>
      <email>brozow@opennms.org</email>
      <roles>
        <role>OGP Member</role>
        <role>Software Architect</role>
      </roles>
      <organization>The OpenNMS Group</organization>
      <timezone>-5</timezone>
    </developer>
  </developers>
  <mailingLists>
    <mailingList>
      <name>OpenNMS Discuss List</name>
      <subscribe>https://lists.sourceforge.net/lists/listinfo/opennms-discuss</subscribe>
      <unsubscribe>https://lists.sourceforge.net/lists/listinfo/opennms-discuss</unsubscribe>
      <post>opennms-discuss@lists.sourcforge.net</post>
      <archive>http://sourceforge.net/mailarchive/forum.php?forum=opennms-discuss</archive>
    </mailingList>
    <mailingList>
      <name>OpenNMS Developer's List</name>
      <subscribe>https://lists.sourceforge.net/lists/listinfo/opennms-devel</subscribe>
      <unsubscribe>https://lists.sourceforge.net/lists/listinfo/opennms-devel</unsubscribe>
      <post>opennms-devel@lists.sourcforge.net</post>
      <archive>http://sourceforge.net/mailarchive/forum.php?forum=opennms-devel</archive>
    </mailingList>
    <mailingList>
      <name>OpenNMS Install Help List</name>
      <subscribe>https://lists.sourceforge.net/lists/listinfo/opennms-install</subscribe>
      <unsubscribe>https://lists.sourceforge.net/lists/listinfo/opennms-install</unsubscribe>
      <post>opennms-install@lists.sourcforge.net</post>
      <archive>http://sourceforge.net/mailarchive/forum.php?forum=opennms-install</archive>
    </mailingList>
    <mailingList>
      <name>OpenNMS Source Control List</name>
      <subscribe>https://lists.sourceforge.net/lists/listinfo/opennms-cvs</subscribe>
      <unsubscribe>https://lists.sourceforge.net/lists/listinfo/opennms-cvs</unsubscribe>
      <post>opennms-cvs@lists.sourcforge.net</post>
      <archive>http://sourceforge.net/mailarchive/forum.php?forum=opennms-cvs</archive>
    </mailingList>
  </mailingLists>
  <scm>
    <connection>scm:svn:https://opennms.svn.sourceforge.net/svnroot/opennms/opennms/tags/opennms-1.3.3</connection>
    <developerConnection>scm:svn:https://opennms.svn.sourceforge.net/svnroot/opennms/opennms/tags/opennms-1.3.3</developerConnection>
    <url>http://opennms.svn.sourceforge.net/viewvc/opennms/opennms/tags/opennms-1.3.3</url>
  </scm>
  <modules>
    <module>dependencies</module>
    <module>opennms-test</module>
    <module>mock-snmp-agent</module>
    <module>opennms-util</module>
    <module>opennms-bootstrap</module>
    <module>opennms-joesnmp</module>
    <module>opennms-install</module>
    <module>opennms-model</module>
    <module>opennms-config-utils</module>
    <module>opennms-dao</module>
    <module>opennms-icmp</module>
    <module>opennms-rrd</module>
    <module>opennms-snmp</module>
    <module>opennms-config</module>
    <module>opennms-services</module>
    <module>opennms-import</module>
    <module>opennms-correlation</module>
    <module>opennms-reporting</module>
    <module>opennms-qosdaemon</module>
    <module>opennms-webstart</module>
    <module>opennms-remote-poller</module>
    <module>opennms-webapp</module>
    <module>opennms-daemon</module>
    <module>opennms-doc</module>
  </modules>
  <build>
  <pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>castor-maven-plugin</artifactId>
        <version>1.0</version>
        <dependencies>
          <dependency>
            <groupId>castor</groupId>
            <artifactId>castor</artifactId>
            <version>0.9.6</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <inherited>false</inherited>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>0.1-SNAPSHOT</version>
        <configuration>
          <fileName>${groovy.fileName}</fileName>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
      </plugin>
    </plugins>
  </pluginManagement>
   <plugins>
     <plugin>
       <inherited>false</inherited>
       <artifactId>maven-release-plugin</artifactId>
       <configuration>
          <preparationGoals>clean install</preparationGoals>
          <arguments>-Droot.dir=${basedir} -Dmaven.test.skip.exec=true</arguments>
          <tagBase>https://opennms.svn.sourceforge.net/svnroot/opennms/opennms/tags</tagBase>
       </configuration>
     </plugin>
     <plugin>
        <inherited>false</inherited>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <configuration>
              <tasks>
                <!-- I have to explicitly set Ant properties from Maven
                     properties.  They aren't passed automatically, even
                     when inheritAll="true" is used with <ant />.  -->
                <ant target="compile.check">
                  <property name="java.vm.version" value="${java.vm.version}" />
                  <property name="java.home" value="${java.home}" />
                  <property name="platform" value="${platform}" />
                  <property name="platform.jdk.include.dir" value="${platform.jdk.include.dir}" />
                  <property name="platform.javahOS" value="${platform.javahOS}" />
                  <property name="build.rrd.include.dir" value="${build.rrd.include.dir}" />
                  <property name="build.rrd.lib.dir" value="${build.rrd.lib.dir}" />
                  <property name="build.postgresql.include.dir" value="${build.postgresql.include.dir}" />
                  <property name="platform.shlib" value="${platform.shlib}" />
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
     </plugin>
<!--
     <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <configuration>
              <tasks>
                <echo>
M2 Project Info via AntRun
==========================
project.basedir = ${project.basedir}
project.groupId = ${project.groupId}
project.artifactId = ${project.artifactId}
project.version = ${project.version}
project.build.directory = ${project.build.directory}
project.build.outputDirectory = ${project.build.outputDirectory}
project.build.testOutputDirectory = ${project.build.testOutputDirectory}
platform = ${platform}
install.dir = ${install.dir}
opennms.home = ${opennms.home}
                </echo>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
     </plugin>
-->
     <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
<!--
     2006-10-08: Disabling this because it reports lots of bogus errors
                 and makes eclipse do things like XML and JSP validation 
                 that it doesn't otherwise do.
 -->
<!--
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <wtpversion>1.0</wtpversion>
        </configuration>
      </plugin>
-->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>mock.logLevel</name>
              <value>${mock.logLevel}</value>
            </property>
            <property>
              <name>mock.debug</name>
              <value>${mock.debug}</value>
            </property>
            <property>
              <name>mock.rundbtests</name>
              <value>${mock.rundbtests}</value>
            </property>
            <property>
              <name>mock.runSnmpTests</name>
              <value>${mock.runSnmpTests}</value>
            </property>
            <property>
              <name>mock.snmpHost</name>
              <value>${mock.snmpHost}</value>
            </property>
          </systemProperties>
	  <forkMode>pertest</forkMode>
          <argLine>-Xmx1024m</argLine>
          <includes>
            <include>**/*Test.java</include>
          </includes>          
        </configuration>
      </plugin>
<!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <inherited>false</inherited>
        <dependencies>
          <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>8.1-404.jdbc3</version>
          </dependency>
        </dependencies>

        <!- NESTED COMMENT common configuration shared by all executions NESTED COMMENT ->
        <configuration>
           <username>opennms</username>
           <password>opennms</password>
           <url>jdbc:postgresql://localhost:5432/test</url>
           <driver>org.postgresql.Driver</driver>
        </configuration>

        <executions>

          <execution>
            <id>drop-db-before-test-if-any</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <!- NESTED COMMENT need another database to drop the targeted one NESTED COMMENT ->
              <user>postgres</user>
              <password></password>
              <url>jdbc:postgresql://localhost:5432/template1</url>
              <autocommit>true</autocommit>
              <sqlCommand>drop database test</sqlCommand>
              <!- NESTED COMMENT ignore error when database is not avaiable NESTED COMMENT ->
              <onError>continue</onError>
            </configuration>
          </execution>

          <execution>
            <id>create-db</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <url>jdbc:postgresql://localhost:5432/template1</url>
              <user>postgres</user>
              <password></password>
              <autocommit>true</autocommit>
              <sqlCommand>create database test</sqlCommand>
            </configuration>
          </execution>

          <execution>
            <id>create-schema</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <onError>continue</onError>
              <srcFiles>
                <srcFile>opennms-daemon/src/main/filtered/etc/create.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>

          <execution>
            <id>create-data</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <fileset>
                <basedir>${basedir}</basedir>
                <srcFiles>
                  <srcFile>src/test/resources/test-data.sql</srcFile>
                </srcFiles>
              </fileset>
            </configuration>
          </execution>

          <execution>
            <id>drop-db-after-test</id>
            <phase>test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <sqlCommand>drop database test</sqlCommand>
            </configuration>
          </execution>
        </executions>
      </plugin>
-->
      <plugin>
        <inherited>false</inherited>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/dist.xml</descriptor>
          </descriptors>
          <appendAssemblyId>false</appendAssemblyId>
          <tarLongFileMode>gnu</tarLongFileMode>
          <outputDirectory>${dist.dir}</outputDirectory>
          <finalName>${dist.name}</finalName>
        </configuration>
      </plugin>
   </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <use>false</use>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jxr-maven-plugin</artifactId>
      </plugin>      
      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
         <configuration>
            <targetJdk>1.5</targetJdk>
            <rulesets>
               <ruleset>/rulesets/basic.xml</ruleset>
               <ruleset>/rulesets/controversial.xml</ruleset>
            </rulesets>
            <format>xml</format>
            <linkXref>true</linkXref>
            <sourceEncoding>utf-8</sourceEncoding>
            <minimumTokens>100</minimumTokens>
         </configuration>
      </plugin>
    </plugins>
  </reporting>
  <properties>
    <!-- maven surefire version added here so it could be overridden -->
    <maven.surefire.plugin.version>2.3</maven.surefire.plugin.version>

    <!-- turn down the default DEBUG logLevel. Override on the command line if you want -->
    <mock.logLevel>WARN</mock.logLevel>
    <mock.debug>false</mock.debug>
    <mock.rundbtests>true</mock.rundbtests>
    <mock.runSnmpTests>false</mock.runSnmpTests>
    <mock.snmpHost>localhost</mock.snmpHost>
    <install.version>${project.version}</install.version>
    <opennms.home>${dist.dir}/${dist.name}</opennms.home>
    <dist.dir>${root.dir}/target</dist.dir>
    <dist.name>opennms-${project.version}</dist.name>
    <install.dir>${opennms.home}</install.dir>
    <install.init.dir>${install.dir}/bin</install.init.dir>
    <install.webapps.dir>${install.dir}/webapps</install.webapps.dir>
    <install.servlet.dir>${install.webapps.dir}/opennms</install.servlet.dir>
    <install.share.dir>${install.dir}/share</install.share.dir>
    <install.bin.dir>${install.dir}/bin</install.bin.dir>
    <install.postgresql.dir>${install.dir}/lib</install.postgresql.dir>
    <install.contrib.dir>${install.dir}/contrib</install.contrib.dir>
    <install.etc.dir>${install.dir}/etc</install.etc.dir>
    <install.logs.dir>${install.dir}/logs</install.logs.dir>
    <install.daemonlogs.dir>${install.logs.dir}/daemon</install.daemonlogs.dir>
    <install.controllerlogs.dir>${install.logs.dir}/controller</install.controllerlogs.dir>
    <install.webapplogs.dir>${install.logs.dir}/webapp</install.webapplogs.dir>
    <install.pid.file>${install.daemonlogs.dir}/opennms.pid</install.pid.file>

    <!-- install.prefix: a prefix used for installation in or chroot -->
    <install.prefix />
    
    <install.postgresql.service>postgresql</install.postgresql.service>
    <install.database.name>opennms</install.database.name>
    <install.database.user>opennms</install.database.user>
    <install.database.password>opennms</install.database.password>
    <install.database.driver>org.postgresql.Driver</install.database.driver> 
    <!-- XXX why is compatible=7.1 being used?
         It's not added here... see etc/opennms-database.xml and
         src/web/etc/web.xml where @install.database.driver@ is used. -->
    <install.database.url>jdbc:postgresql://localhost:5432/</install.database.url>
    <install.database.bindir>/usr/bin</install.database.bindir>
    <install.rrdtool.bin>/usr/bin/rrdtool</install.rrdtool.bin>
    <install.perl.bin>/usr/bin/perl</install.perl.bin>
  
    <!-- platform specific -->
    <build.soext>${platform.shlib}</build.soext>
    <build.jni.compiler.arg />
    <build.jni.linker.arg />
    <build.postgresql.compiler.arg />
    <build.postgresql.linker.arg />
    
    <!-- rpm specific -->
    <rpm.install.dir>/opt/OpenNMS</rpm.install.dir>
    <rpm.build.executable>rpmbuild</rpm.build.executable>
    <rpm.build.docs>1</rpm.build.docs>
    <rpm.sign>false</rpm.sign>
    <rpm.buildtests>false</rpm.buildtests>
    <rpm.database.user>opennms</rpm.database.user>
    <rpm.additional.args /> 
    <rpm.database.name>opennms</rpm.database.name>
    <rpm.database.password>opennms</rpm.database.password>


   <!-- code signing properties - used in opennms-webstart -->
   <webstart.keystore>${project.build.directory}/build-generated-keystore.ks</webstart.keystore>
   <webstart.keypass>opennms</webstart.keypass>
   <webstart.storepass>opennms</webstart.storepass>
   <webstart.keyalias>opennms-webstart-key</webstart.keyalias>
   <webstart.keystore.delete>true</webstart.keystore.delete>
   <webstart.keygen>true</webstart.keygen>
   <webstart.dnameCn>${user.name}</webstart.dnameCn>
   <webstart.dnameL />
   <webstart.dnameSt />
   <webstart.dnameC />

  </properties>

  <profiles>
    <profile>
      <id>macosx</id>
      
      <activation>
        <property>
          <name>os.name</name>
          <value>Mac OS X</value>
        </property>
      </activation>
  
      <properties>
        <platform>macosx</platform>
        <platform.jdk.include.dir>${java.home}/include</platform.jdk.include.dir>
        <platform.javahOS>macosx</platform.javahOS>
        <platform.define>__DARWIN__</platform.define>
        <platform.shlib>dylib</platform.shlib>
        <platform.jni>jnilib</platform.jni>
      </properties>
    </profile>

    <profile>
      <id>Linux</id>
      
      <activation>
        <property>
          <name>os.name</name>
          <value>Linux</value>
        </property>
      </activation>
  
      <properties>
        <platform>linux</platform>
        <platform.jdk.include.dir>${java.home}/../include</platform.jdk.include.dir>
        <platform.javahOS>linux</platform.javahOS>
        <platform.define>__LINUX__</platform.define>
        <platform.shlib>so</platform.shlib>
        <platform.jni>so</platform.jni>
      </properties>
    </profile>

    <profile>
      <id>Solaris</id>
      
      <activation>
        <property>
          <name>os.name</name>
          <value>SunOS</value>
        </property>
      </activation>
  
      <properties>
    	<platform>solaris</platform>
        <platform.jdk.include.dir>${java.home}/../include</platform.jdk.include.dir>
        <platform.javahOS>solaris</platform.javahOS>
        <platform.define>__SOLARIS__</platform.define>
	<platform.shlib>so</platform.shlib>
	<platform.jni>so</platform.jni>
      </properties>
    </profile>

    <profile>
      <id>FreeBSD</id>
      
      <activation>
        <property>
          <name>os.name</name>
          <value>FreeBSD</value>
        </property>
      </activation>

      <properties>
        <platform>freebsd</platform>
        <platform.jdk.include.dir>${java.home}/../include</platform.jdk.include.dir>
        <platform.javahOS>freebsd</platform.javahOS>
        <platform.define>__FREEBSD__</platform.define>
        <platform.shlib>so</platform.shlib>
        <platform.jni>so</platform.jni>
      </properties>
    </profile>

    <!-- Mac OS X -->
    <profile>
      <id>darwinPorts</id>
      
      <activation>
        <file>
          <exists>/opt/local/bin/port</exists>
        </file>
      </activation>
  
      <properties>
        <build.rrd.include.dir>/opt/local/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/opt/local/lib</build.rrd.lib.dir>
        <build.postgresql.include.dir>/opt/local/include/pgsql8/server</build.postgresql.include.dir>
  
        <install.rrdtool.bin>/opt/local/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>

    <profile>
      <id>fink</id>
      
      <activation>
        <file>
          <exists>/sw/fink/VERSION</exists>
        </file>
      </activation>
  
      <properties>
        <build.rrd.include.dir>/sw/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/sw/lib</build.rrd.lib.dir>
        <build.postgresql.include.dir>/sw/include/postgresql</build.postgresql.include.dir>
  
        <install.rrdtool.bin>/sw/bin/rrdtool</install.rrdtool.bin>
      </properties>
    </profile>
  
    <!-- Linux -->
    <profile>
      <id>linux-generic-rrdtool-shared</id>
      
      <activation>
        <file>
          <exists>/usr/lib/librrd.so</exists>
        </file>
      </activation>
  
      <properties>
        <build.rrd.include.dir>/usr/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/usr/lib</build.rrd.lib.dir>
      </properties>
    </profile>

    <profile>
      <id>linux-generic-rrdtool-static</id>
      
      <activation>
        <file>
          <exists>/usr/lib/librrd.a</exists>
        </file>
      </activation>
  
      <properties>
        <build.rrd.include.dir>/usr/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/usr/lib</build.rrd.lib.dir>
      </properties>
    </profile>

    <profile>
      <id>linux-64bit-generic-rrdtool-shared</id>
      
      <activation>
        <file>
          <exists>/usr/lib64/librrd.so</exists>
        </file>
      </activation>
  
      <properties>
        <build.rrd.include.dir>/usr/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/usr/lib64</build.rrd.lib.dir>
      </properties>
    </profile>

    <profile>
      <id>linux-64bit-generic-rrdtool-static</id>
      
      <activation>
        <file>
          <exists>/usr/lib64/librrd.a</exists>
        </file>
      </activation>
  
      <properties>
        <build.rrd.include.dir>/usr/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/usr/lib64</build.rrd.lib.dir>
      </properties>
    </profile>

    <profile>
      <id>generic-postgres-pgsql-server</id>
      
      <activation>
        <file>
          <exists>/usr/include/pgsql/server/postgres.h</exists>
        </file>
      </activation>
  
      <properties>
        <build.postgresql.include.dir>/usr/include/pgsql/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <profile>
      <id>generic-postgres-postgresql-server</id>
      <activation>
        <file>
          <exists>/usr/include/postgresql/server/postgres.h</exists>
        </file>
      </activation>
  
      <properties>
        <build.postgresql.include.dir>/usr/include/postgresql/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <profile>
      <id>generic-postgres-postgresql</id>
      <activation>
        <file>
          <exists>/usr/include/postgresql/postgres.h</exists>
        </file>
      </activation>
  
      <properties>
        <build.postgresql.include.dir>/usr/include/postgresql</build.postgresql.include.dir>
      </properties>
    </profile>
    
    <profile>
      <id>generic-postgres-8.0</id>
      <activation>
        <file>
          <exists>/usr/include/postgresql/8.0/server/postgres.h</exists>
        </file>
      </activation>
  
      <properties>
        <build.postgresql.include.dir>/usr/include/postgresql/8.0/server</build.postgresql.include.dir>
      </properties>
    </profile>
  
    <profile>
      <id>generic-postgres-8.1</id>
      <activation>
        <file>
          <exists>/usr/include/postgresql/8.1/server/postgres.h</exists>
        </file>
      </activation>
  
      <properties>
        <build.postgresql.include.dir>/usr/include/postgresql/8.1/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <profile>
      <id>generic-postgres-8.2</id>
      <activation>
        <file>
          <exists>/usr/include/postgresql/8.2/server/postgres.h</exists>
        </file>
      </activation>
  
      <properties>
        <build.postgresql.include.dir>/usr/include/postgresql/8.2/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <!-- Solaris -->
    <!--
         This is for the PostgreSQL package that ships with Solaris 10
         Update 2 and later.  See this for more information:

         http://www.sun.com/software/solaris/howtoguides/postgresqlhowto.jsp
      -->
    <profile>
      <id>solaris-system-postgresql</id>
      <activation>
      	<file>
	  <exists>/var/sadm/pkg/SUNWpostgr-devel/pkginfo</exists>
	</file>
      </activation>

      <properties>
	<build.postgresql.include.dir>/usr/include/pgsql/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <profile>
      <id>solaris-postgres8</id>
      <activation>
      	<file>
	  <exists>/usr/local/pgsql/lib/libpq.so.3.2</exists>
	</file>
      </activation>

      <properties>
	<build.postgresql.include.dir>/usr/local/pgsql/include/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <profile>
      <id>solaris-postgres81</id>
      <activation>
       <file>
         <exists>/usr/local/pgsql/lib/libpq.so.4.1</exists>
       </file>
      </activation>

      <properties>
       <build.postgresql.include.dir>/usr/local/pgsql/include/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <profile>
      <id>solaris-local-rrdtool1.0.49</id>
      <activation>
      	<file>
	  <exists>/usr/local/rrdtool-1.0.49</exists>
	</file>
      </activation>

      <properties>
        <install.rrdtool.bin>/usr/local/rrdtool/bin/rrdtool</install.rrdtool.bin>
	<build.rrd.include.dir>/usr/local/rrdtool-1.0.49/include</build.rrd.include.dir>
	<build.rrd.lib.dir>/usr/local/rrdtool-1.0.49/lib</build.rrd.lib.dir>
      </properties>
    </profile>

    <!--
         This is for the rrdtool package from Blastwave.org.
         See this for more information:

         http://www.blastwave.org/packages.php/rrdtool
      -->
    <profile>
      <id>solaris-blastwave-rrdtool</id>
      <activation>
      	<file>
	  <exists>/var/sadm/pkg/CSWrrd/pkginfo</exists>
	</file>
      </activation>

      <properties>
        <install.rrdtool.bin>/opt/csw/bin/rrdtool</install.rrdtool.bin>
	<build.rrd.include.dir>/opt/csw/include</build.rrd.include.dir>
	<build.rrd.lib.dir>/opt/csw/lib</build.rrd.lib.dir>
      </properties>
    </profile>

    <!--
         This is for the postgresql package from Blastwave.org.
         See this for more information:

         http://www.blastwave.org/packages.php/postgresql
      -->
    <profile>
      <id>solaris-blastwave-postgresql</id>
      <activation>
      	<file>
	  <exists>/var/sadm/pkg/CSWpostgresql/pkginfo</exists>
	</file>
      </activation>

      <properties>
	<build.postgresql.include.dir>/opt/csw/postgresql/include/server</build.postgresql.include.dir>
      </properties>
    </profile>

    <!-- FreeBSD -->
<!--
    <profile>
      <id>freebsd-ports</id>
      <activation>
        .... don't know how to activate this ....
      </activation>
  
      <properties>
        <build.rrd.include.dir>/usr/local/include</build.rrd.include.dir>
        <build.rrd.lib.dir>/usr/local/lib</build.rrd.lib.dir>
	<build.postgresql.compiler.arg>-I/usr/local/include</build.postgresql.compiler.arg>
        <build.postgresql.include.dir>/usr/local/include/postgresql/server</build.postgresql.include.dir>
      </properties>
    </profile>
-->
 
    <profile>
      <id>rrd-usr-local-include</id>
      <activation>
        <file>
          <exists>/usr/local/include/rrd.h</exists>
        </file>
      </activation>
      <properties>
        <build.rrd.include.dir>/usr/local/include</build.rrd.include.dir>
      </properties>
    </profile>

    <profile>
      <id>rrd-usr-local-lib</id>
      <activation>
        <file>
          <exists>/usr/local/lib/librrd.so</exists>
        </file>
      </activation>
      <properties>
        <build.rrd.lib.dir>/usr/local/lib</build.rrd.lib.dir>
      </properties>
    </profile>

    <profile>
      <id>postgresql-usr-local-include-postgresql-server</id>
      <activation>
        <file>
          <exists>/usr/local/include/postgresql/server/postgres.h</exists>
        </file>
      </activation>
      <properties>
        <build.postgresql.compiler.arg>-I/usr/local/include</build.postgresql.compiler.arg>
        <build.postgresql.include.dir>/usr/local/include/postgresql/server</build.postgresql.include.dir>
      </properties>
    </profile>

  </profiles>


  <dependencies>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <!--  opennms dependencies -->
      <!--  PLEASE KEEP THESE IN ALPHABETICAL ORDER -->
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>drools-correlation-engine</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>mock-snmp-agent</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-bootstrap</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-config-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-correlator</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-dao</artifactId>
        <version>${project.version}</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-daemon</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-drools</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-icmp-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-import</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-install</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-joesnmp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
	<artifactId>opennms-qosdaemon</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-reporting</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrd-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrdtool-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-rrd-jrobin</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-services</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-site</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-snmp-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-snmp-joesnmp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-snmp-snmp4j</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-test</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-util</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opennms</groupId>
        <artifactId>opennms-webapp-ng</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!--  external dependencies -->
      <!--  PLEASE KEEP THESE IN ALPHABETICAL ORDER -->
      <dependency>
        <groupId>alt.dev.jmta</groupId>
        <artifactId>jmta</artifactId>
        <version>1.0</version>
      </dependency>
      <dependency>
        <groupId>batik</groupId>
        <artifactId>batik-dom</artifactId>
        <version>1.5</version>
      </dependency>
      <dependency>
        <groupId>batik</groupId>
        <artifactId>batik-svg-dom</artifactId>
        <version>1.5</version>
      </dependency>
      <dependency>
        <groupId>batik</groupId>
        <artifactId>batik-transcoder</artifactId>
        <version>1.5</version>
      </dependency>
      <dependency>
        <groupId>batik</groupId>
        <artifactId>batik-xml</artifactId>
        <version>1.5</version>
      </dependency>
      <dependency>
        <groupId>batik</groupId>
        <artifactId>batik-util</artifactId>
        <version>1.5</version>
      </dependency>
        <dependency>
          <groupId>bsf</groupId>
          <artifactId>bsf</artifactId>
          <version>2.2</version>
      </dependency>
      <dependency>
        <groupId>bsh</groupId>
        <artifactId>bsh</artifactId>
        <version>1.2b7</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>2.1_3</version>
      </dependency>
      <dependency>
        <groupId>c3p0</groupId>
        <artifactId>c3p0</artifactId>
        <version>0.9.0-pre5</version>
      </dependency>
      <dependency>
        <groupId>castor</groupId>
        <artifactId>castor</artifactId>
        <version>0.9.6</version>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils-core</artifactId>
        <version>1.7.0</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>1.2</version>
      </dependency>
      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>3.0.1</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>2.1</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.0.4</version>
      </dependency>
      <dependency>
        <groupId>concurrent</groupId>
        <artifactId>concurrent</artifactId>
        <version>1.3.4</version>
      </dependency>
      <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>2.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.extremecomponents</groupId>
        <artifactId>extremecomponents</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.gwtwidgets</groupId>
        <artifactId>gwt-widgets</artifactId>
        <version>0.1.3</version>
        <!-- we use provided since this is copiled to javascript 
              and need to not be included with opennms -->
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.gwtwidgets</groupId>
        <artifactId>gwt-widgets-server</artifactId>
        <version>0.1.2</version>
      </dependency>
      <dependency>
        <groupId>groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>1.0-jsr-06</version>    
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>httpunit</groupId>
        <artifactId>httpunit</artifactId>
        <version>1.6.1</version>
      </dependency>
      <dependency>
        <groupId>jakarta-regexp</groupId>
        <artifactId>jakarta-regexp</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>javax.jnlp</groupId>
        <artifactId>jnlp</artifactId>
        <version>1.5.0</version>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>persistence-api</artifactId>
        <version>1.0</version>     
      </dependency>
      <dependency>
        <groupId>javax.samples.jnlp</groupId>
        <artifactId>jnlp-servlet</artifactId>
        <version>1.6.0</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>1.1.2</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.3</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty</artifactId>
        <version>6.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>6.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.5-6.0.1</version>
      </dependency>
      <dependency>
        <groupId>jfree</groupId>
        <artifactId>jfreechart</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>jivesoftware</groupId>
        <artifactId>smack</artifactId>
        <version>2.2.1</version>
      </dependency>
      <dependency>
        <groupId>jivesoftware</groupId>
        <artifactId>smackx</artifactId>
        <version>2.2.1</version>
      </dependency>
      <dependency>
        <groupId>jmock</groupId>
        <artifactId>jmock</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>jmock</groupId>
        <artifactId>jmock-cglib</artifactId>
        <version>1.0.1</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib-full</artifactId>
          </exclusion>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.jrobin</groupId>
        <artifactId>jrobin</artifactId>
        <version>1.5.4</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.1</version>
      </dependency>
      <dependency>
        <groupId>jwebunit</groupId>
        <artifactId>jwebunit</artifactId>
        <version>1.2</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.9</version>
      </dependency>
      <dependency>
        <groupId>mx4j</groupId>
        <artifactId>mx4j</artifactId>
        <version>3.0.1</version>
      </dependency>
      <dependency>
        <groupId>mx4j</groupId>
        <artifactId>mx4j-remote</artifactId>
        <version>3.0.1</version>
      </dependency>
      <dependency>
        <groupId>mx4j</groupId>
        <artifactId>mx4j-tools</artifactId>
        <version>3.0.1</version>
      </dependency>
      <dependency>
        <groupId>net.sf.jradius</groupId>
        <artifactId>jradius-client</artifactId>
        <version>20040211</version>
      </dependency>
      <dependency>
        <groupId>openldap</groupId>
        <artifactId>jldap</artifactId>
        <version>2005.10.03</version>
      </dependency>

      <!--
           As of Acegi Security 1.0.1 as released in the Maven 2 repository,
           version 1.2.7 of the various Spring projects listed below are
           dependencies of org.acegisecurity:acegi-security.  We use
           Spring 2, so we need to exclude thse dependencies of
           Acegi Security and make sure that the bits of OpenNMS that use
           Acegi Security have dependencies for the Spring 2 versions of
           these dependencies (remoting, jdbc, support, and mock).
	-->
      <dependency>
        <groupId>org.acegisecurity</groupId>
        <artifactId>acegi-security</artifactId>
        <version>1.0.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-remoting</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-support</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.dhcp.jdhcp</groupId>
        <artifactId>jdhcp</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.extremecomponents</groupId>
        <artifactId>extremecomponents</artifactId>
        <version>1.0.1</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate</artifactId>
        <version>3.2.0.ga</version>
        <exclusions>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>asm</groupId>
            <artifactId>asm-attrs</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-annotations</artifactId>
        <version>3.2.0.ga</version>
        <exclusions>
          <exclusion>
            <groupId>javax.persistence</groupId>
            <artifactId>ejb</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>asm</groupId>
            <artifactId>asm-attrs</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.samba.jcifs</groupId>
        <artifactId>jcifs</artifactId>
        <version>1.2.6</version>
      </dependency>
      <dependency>
        <groupId>org.snmp4j</groupId>
        <artifactId>snmp4j</artifactId>
        <version>1.8.1</version>
      </dependency>
      <dependency>
        <groupId>org.snmp4j</groupId>
        <artifactId>snmp4j-agent</artifactId>
        <version>1.1.1</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-hibernate3</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
          <exclusion>
            <!-- need to use cglib-nodep instead -->
            <groupId>asm</groupId>
            <artifactId>asm-attrs</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-mock</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-remoting</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-support</artifactId>
        <version>2.0</version>
        <exclusions>
          <exclusion>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>oro</groupId>
        <artifactId>oro</artifactId>
        <version>2.0.8</version>
      </dependency>
      <dependency>
        <groupId>poi</groupId>
        <artifactId>poi</artifactId>
        <version>2.5.1</version>
      </dependency>
      <dependency>
        <groupId>postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>8.1-407.jdbc3</version>
      </dependency>
      <dependency>
        <groupId>quartz</groupId>
        <artifactId>quartz</artifactId>
        <version>1.5.1</version>
      </dependency>
      <dependency>
        <groupId>struts</groupId>
        <artifactId>struts</artifactId>
        <version>1.2.7</version>
      </dependency>
      <dependency>
        <groupId>taglibs</groupId>
        <artifactId>standard</artifactId>
        <version>1.1.2</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>tomcat</groupId>
        <artifactId>catalina</artifactId>
        <version>5.5.9</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.6.2</version>
      </dependency>
      <dependency>
        <groupId>xmlrpc</groupId>
        <artifactId>xmlrpc</artifactId>
        <version>2.0.1</version>
      </dependency>
      <dependency>
	<groupId>jep</groupId>
	<artifactId>jep</artifactId>
	<version>2.40</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <repositories>
    <repository>
      <releases />
      <id>opennms-repo</id>
      <name>OpenNMS Repository</name>
      <url>http://repo.opennms.org/maven2</url>
    </repository>
    <repository>
      <snapshots />
      <id>opennms-snapshots</id>
      <name>OpenNMS Repository</name>
      <url>http://repo.opennms.org/snapshots</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases />
      <snapshots />
      <id>opennms-repo</id>
      <name>OpenNMS Repository</name>
      <url>http://repo.opennms.org/maven2</url>
    </pluginRepository>
    <pluginRepository>
      <releases />
      <snapshots />
      <id>codehaus-snapshots</id>
      <name>Maven/Codehaus Snapshot Repository</name>
      <url>http://snapshots.repository.codehaus.org</url>
    </pluginRepository>
<!--
    <pluginRepository>
      <releases />
      <snapshots />
      <id>codehaus-snapshots-old</id>
      <name>Maven/Codehaus Snapshot Repository</name>
      <url>http://snapshots.maven.codehaus.org/maven2</url>
    </pluginRepository>
    <pluginRepository>
      <snapshots />
      <id>apache.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>http://people.apache.org/maven-snapshot-repository</url>
    </pluginRepository>
-->
  </pluginRepositories>
  <distributionManagement>
    <site>
      <id>opennms-site</id>
      <name>OpenNMS Build Website</name>
      <url>scpexe://repo.opennms.org/var/www/sites/opennms.org/site/repo/sites/${project.version}/${project.artifactId}</url>
    </site>
    <repository>
      <id>opennms-repo</id>
      <name>OpenNMS Maven Repository</name>
      <url>scpexe://repo.opennms.org/var/www/sites/opennms.org/site/repo/maven2</url>
    </repository>
    <snapshotRepository>
      <id>opennms-snapshots</id>
      <name>OpenNMS Snapshot Maven Repository</name>
      <url>scpexe://repo.opennms.org/var/www/sites/opennms.org/site/repo/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
</project>
